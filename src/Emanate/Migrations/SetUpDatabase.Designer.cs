// <auto-generated />

using System;
using System.Linq;
using System.Threading.Tasks;
using Emanate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Emanate.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    [Migration("20190704045350_SetUpDatabase")]
    partial class SetUpDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Emanate.Web.Model.DisplayDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ProfileId");

                    b.Property<Guid?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TypeId");

                    b.ToTable("DisplayDevices");
                });

            modelBuilder.Entity("Emanate.Web.Model.DisplayDeviceProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("DisplayDeviceProfiles");
                });

            modelBuilder.Entity("Emanate.Web.Model.DisplayDeviceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icon")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DisplayDeviceType");
                });

            modelBuilder.Entity("Emanate.Web.Model.SourceDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ProfileId");

                    b.Property<Guid?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TypeId");

                    b.ToTable("SourceDevices");
                });

            modelBuilder.Entity("Emanate.Web.Model.SourceDeviceProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("SourceDeviceProfiles");
                });

            modelBuilder.Entity("Emanate.Web.Model.SourceDeviceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icon")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SourceDeviceTypes");
                });

            modelBuilder.Entity("Emanate.Web.Model.DisplayDevice", b =>
                {
                    b.HasOne("Emanate.Web.Model.DisplayDeviceProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("Emanate.Web.Model.DisplayDeviceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Emanate.Web.Model.DisplayDeviceProfile", b =>
                {
                    b.HasOne("Emanate.Web.Model.DisplayDeviceType", "Type")
                        .WithMany("Profiles")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Emanate.Web.Model.SourceDevice", b =>
                {
                    b.HasOne("Emanate.Web.Model.SourceDeviceProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("Emanate.Web.Model.SourceDeviceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Emanate.Web.Model.SourceDeviceProfile", b =>
                {
                    b.HasOne("Emanate.Web.Model.SourceDeviceType", "Type")
                        .WithMany("Profiles")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
